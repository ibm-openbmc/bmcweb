{
    "$id": "http://redfish.dmtf.org/schemas/v1/LicenseService.v1_0_0.json",
    "$ref": "#/definitions/LicenseService",
    "$schema": "http://redfish.dmtf.org/schemas/v1/redfish-schema-v1.json",
    "copyright": "Copyright 2014-2019 DMTF. For the full DMTF copyright policy, see http://www.dmtf.org/about/policies/copyright",
    "definitions": {
        "Actions": {
            "additionalProperties": false,
            "description": "The available actions for this resource.",
            "longDescription": "This type shall contain the available actions for this resource.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "#LicenseService.Install": {
                    "$ref": "#/definitions/Install"
                },
                "Oem": {
                    "$ref": "#/definitions/OemActions",
                    "description": "The available OEM-specific actions for this resource.",
                    "longDescription": "This property shall contain the available OEM-specific actions for this resource."
                }
            },
            "type": "object"
        },
        "Install": {
            "additionalProperties": false,
            "description": "This action makes a license installation request.",
            "longDescription": "This action shall make a request to install single or multiple licenses in file.",
            "parameters": {
                "FileURI": {
                    "description": "The URI of the license to install.",
                    "longDescription": "This parameter shall contain an RFC3986-defined URI that links to a file that the license service retrieves to install license in that file.  This URI should contain a scheme that describes the transfer protocol.  If the TransferProtocol parameter is absent or not supported, and a transfer protocol is not specified by a scheme contained within this URI, the service shall use HTTP to get the file.",
                    "requiredParameter": true,
                    "type": "string"
                },
                "Password": {
                    "description": "The password to access the URI specified by the FileURI parameter.",
                    "longDescription": "This parameter shall represent the password to access the URI specified by the FileURI parameter.",
                    "type": "string"
                },
                "TransferProtocol": {
                    "$ref": "#/definitions/TransferProtocolType",
                    "description": "The network protocol that the license service uses to retrieve the license file located at the URI provided in FileURI.  This parameter is ignored if the URI provided in FileURI contains a scheme.",
                    "longDescription": "This parameter shall contain the network protocol that the license service shall use to retrieve the license file located at the FileURI.  Services should ignore this parameter if the URI provided in FileURI contains a scheme.  If this parameter is not provided (or supported), and a transfer protocol is not specified by a scheme contained within this URI, the service shall use HTTP to retrieve the file."
                },
                "Username": {
                    "description": "The user name to access the URI specified by the FileURI parameter.",
                    "longDescription": "This parameter shall represent the user name to access the URI specified by the FileURI parameter.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LicenseParameter": {
            "additionalProperties": false,
            "description": "The license parameters used with MultipartHttpPushUri for license installation.",
            "longDescription": "This type shall contain the license parameters when passing the license when using the URI specified by the MultipartHttpPushUri property to push a license file.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "Oem": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Oem",
                    "description": "The OEM extension property.",
                    "longDescription": "This property shall contain the OEM extensions.  All values for properties contained in this object shall conform to the Redfish Specification-described requirements."
                },
                "Targets": {
                    "description": "An array of URIs that indicate where to apply the license.",
                    "format": "uri-reference",
                    "items": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "longDescription": "This property shall contain zero or more URIs that indicate where to apply the license when using the URI specified by the MultipartHttpPushUri property to push a license file. The service shall determine it if this property is not present or contains no targets.",
                    "readonly": true,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LicenseService": {
            "additionalProperties": false,
            "description": "The LicenseService schema describes a license service that represents the actions available to manage licenses and links to the licenses.",
            "longDescription": "This resource shall represent the license service properties for a Redfish implementation.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "@odata.context": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata-v4.json#/definitions/context"
                },
                "@odata.etag": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata-v4.json#/definitions/etag"
                },
                "@odata.id": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata-v4.json#/definitions/id"
                },
                "@odata.type": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata-v4.json#/definitions/type"
                },
                "Actions": {
                    "$ref": "#/definitions/Actions",
                    "description": "The available actions for this resource.",
                    "longDescription": "This property shall contain the available actions for this resource."
                },
                "Description": {
                    "anyOf": [
                        {
                            "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Description"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "readonly": true
                },
                "Id": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Id",
                    "readonly": true
                },
                "Licenses": {
                    "anyOf": [
                        {
                            "$ref": "http://redfish.dmtf.org/schemas/v1/LicenseCollection.json#/definitions/LicenseCollection"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The link to the collection of licenses.",
                    "longDescription": "This property shall contain a link to a resource collection of type License.",
                    "readonly": true
                },
                "MultipartHttpPushUri": {
                    "description": "The URI used to perform a Redfish Specification-defined Multipart HTTP or HTTPS push operation to install a license.",
                    "format": "uri-reference",
                    "longDescription": "This property shall contain a URI used to perform a Redfish Specification-defined Multipart HTTP or HTTPS POST of license file for the purpose of installing license contained within the file.",
                    "readonly": true,
                    "type": "string"
                },
                "Name": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Name",
                    "readonly": true
                },
                "Oem": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Oem",
                    "description": "The OEM extension property.",
                    "longDescription": "This property shall contain the OEM extensions.  All values for properties that this object contains shall conform to the Redfish Specification-described requirements."
                }
            },
            "required": [
                "@odata.id",
                "@odata.type",
                "Id",
                "Name"
            ],
            "type": "object"
        },
        "OemActions": {
            "additionalProperties": true,
            "description": "The available OEM-specific actions for this resource.",
            "longDescription": "This type shall contain the available OEM-specific actions for this resource.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {},
            "type": "object"
        },
        "TransferProtocolType": {
            "enum": [
                "CIFS",
                "FTP",
                "SFTP",
                "HTTP",
                "HTTPS",
                "SCP",
                "TFTP",
                "OEM",
                "NFS"
            ],
            "enumDescriptions": {
                "CIFS": "Common Internet File System (CIFS).",
                "FTP": "File Transfer Protocol (FTP).",
                "HTTP": "Hypertext Transfer Protocol (HTTP).",
                "HTTPS": "Hypertext Transfer Protocol Secure (HTTPS).",
                "NFS": "Network File System (NFS).",
                "OEM": "A manufacturer-defined protocol.",
                "SCP": "Secure Copy Protocol (SCP).",
                "SFTP": "Secure File Transfer Protocol (SFTP).",
                "TFTP": "Trivial File Transfer Protocol (TFTP)."
            },
            "type": "string"
        }
    },
    "owningEntity": "DMTF",
    "release": "2021.3",
    "title": "#LicenseService.v1_0_0.LicenseService"
}
